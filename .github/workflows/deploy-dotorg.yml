name: Deploy to WordPress.org

on:
    release:
        types:
            - published
    workflow_dispatch:
        inputs:
            dry-run:
                type: boolean
                description: 'Debug mode (run without publishing).'
                default: false
jobs:
    release:
        name: Publish release
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Read PHP version
              id: php-version
              run: echo "version=$(jq -r .config.platform.php composer.json)" >> $GITHUB_OUTPUT

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ steps.php-version.outputs.version }}
                  extensions: mbstring, dom, fileinfo, xml, curl
                  coverage: none
                  tools: composer:v2

            - name: Cache Composer dependencies
              uses: actions/cache@v4
              with:
                  path: vendor
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --prefer-dist --no-progress

            - name: Setup Node.js
              uses: actions/setup-node@v6
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            - name: Install npm dependencies
              run: npm ci

            - name: Verify version consistency
              run: npm run verify-version-consistency

            - name: Prepare dist
              run: npm run plugin-zip && unzip *.zip -d dist

            - name: WordPress plugin deploy
              uses: 10up/action-wordpress-plugin-deploy@stable
              id: deploy
              with:
                  dry-run: ${{ github.event_name == 'workflow_dispatch' && inputs.dry-run || false }}
              env:
                  SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
                  SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
                  BUILD_DIR: dist

            - name: Upload release asset
              if: github.event_name == 'release'
              run: gh release upload ${{ github.event.release.tag_name }} *.zip
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
